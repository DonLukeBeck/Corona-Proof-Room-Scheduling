buildscript {
	repositories {
		mavenCentral()
		//Needed only for SNAPSHOT versions
		//maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
	}
	dependencies {
		classpath 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.5.2'
	}
}

plugins {
	id 'org.springframework.boot'
	id 'io.spring.dependency-management'
	id 'java'
	// Test coverage
	id 'jacoco'
	id 'org.barfuin.gradle.jacocolog'

	// Code style
	id 'checkstyle'

	// PMD
	id 'pmd'

	// PITest
	id 'info.solidsoft.pitest'
}

group = 'nl.tudelft.cse.sem.identity'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 14
targetCompatibility = 14

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "Hoxton.SR1")
}

evaluationDependsOn(':shared')

dependencies {
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:2.0.1.RELEASE'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-server:2.0.1.RELEASE'
	implementation 'org.springframework.boot:spring-boot-starter'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation('org.junit.jupiter:junit-jupiter:5.5.2')
	testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.1.0'
	testImplementation('org.assertj:assertj-core:3.14.0')

	compileOnly 'org.projectlombok:lombok:1.18.16'
	annotationProcessor 'org.projectlombok:lombok:1.18.16'

	testCompileOnly 'org.projectlombok:lombok:1.18.16'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.16'

	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.19'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.security:spring-security-test'
	compile 'org.springframework.security:spring-security-web:4.0.3.RELEASE'
	compile 'org.springframework.security:spring-security-config:4.0.3.RELEASE'
	compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
	runtimeOnly 'mysql:mysql-connector-java'
	implementation('org.springframework.boot:spring-boot-starter-webflux')
	testImplementation('io.projectreactor:reactor-test')

	implementation project(':shared')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}


test {
	useJUnitPlatform()
	jacoco {
		enabled = true
		includes = ['nl.tudelft.sem.identity.*']
		excludes = []
	}
}

repositories {
	mavenCentral()
}

jacocoTestCoverageVerification() {
	dependsOn test
	violationRules {
		rule {
			enabled = true
			element = 'CLASS'
			includes = ['nl.tudelft.sem.identity.*']

			limit {
				counter = 'BRANCH'
				value = 'COVEREDRATIO'
				minimum = 0.1
			}
		}
	}
}

jacocoTestReport() {
	dependsOn test
	reports {
		xml.enabled true
		csv.enabled true
		html.enabled true
	}
}

checkstyle {
	toolVersion "8.37"
	configFile = file("${rootDir}/config/checkstyle/checkstyle.xml")
}

pmd {
	incrementalAnalysis = true
}

apply plugin: 'info.solidsoft.pitest'
pitest {
	//adds dependency to org.pitest:pitest-junit5-plugin and sets "testPlugin" to "junit5"
	junit5PluginVersion = '0.12'

	targetClasses = ['nl.tudelft.sem.identity.*']  //by default "${project.group}.*"
	pitestVersion = '1.5.1' //not needed when a default PIT version should be used
	threads = 4
	outputFormats = ['XML', 'HTML']
	timestampedReports = false
}
