image: gradle:6.7-jdk15

stages:
  - build
  - staticAnalysis
  - test
  - visualize

build:
  stage: build
  script:
    gradle build
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master"'
    - when: manual

checkStyle:
  stage: staticAnalysis
  script:
    gradle checkstyleMain checkStyleTest
  rules:
    - when: on_success

PMD:
  stage: staticAnalysis
  script:
      gradle pmdMain pmdTest
  rules:
    - when: on_success

test:
  stage: test
  script:
    - gradle test
    - gradle jacocoTestReport
    # instruction coverage (may replace later with branch coverage)
    # this is easier than trying to get the coverage from the html/xml
    - for f in subprojects/*; do 
          tail -n+2 "$f"/build/reports/jacoco/test/jacocoTestReport.csv
              >> build/reports/jacoco/test/jacocoTestReport.csv;
        done
    - awk -F "," 'NF>1
        {
          totalLines += $4 + $5; coveredLines += $5
        }
        END {
          print "(" 100*coveredLines/totalLines "%) covered"
        }' build/reports/jacoco/test/jacocoTestReport.csv
  coverage: /\(\d+.\d+\%\) covered/
  artifacts:
    paths:
      - build/reports/jacoco/test/jacocoTestReport.xml
    expire_in: 1 week
  rules:
    - when: on_success

# with kind help from the docs: https://docs.gitlab.com/ee/user/project/merge_requests/test_coverage_visualization.html
coverage:
  stage: visualize
  image: haynes/jacoco2cobertura:1.0.3
  script:
    # convert report from jacoco to cobertura
    - 'python /opt/cover2cover.py build/reports/jacoco/test/jacocoTestReport.xml src/main/java > build/cobertura.xml'
    # read the <source></source> tag and prepend the path to every filename attribute
    - 'python /opt/source2filename.py build/cobertura.xml'
  needs: ["test"]
  dependencies:
    - test
  artifacts:
    reports:
      cobertura: build/cobertura.xml
  rules:
    - when: on_success

